{
  "compilerOptions": {
    "target": "ESNext", // Specifies the ECMAScript target version (e.g., ES2015, ES2017, ES2020, ESNext)
    "useDefineForClassFields": true, // Use 'define' instead of 'assign' for class fields
    "lib": ["DOM", "DOM.Iterable", "ESNext"], // List of library files to be included in the compilation
    "allowJs": false, // Do not allow JavaScript files to be compiled
    "skipLibCheck": true, // Skip type checking of all declaration files (*.d.ts)
    "esModuleInterop": false, // Disable emitting additional import/export interop code
    "allowSyntheticDefaultImports": true, // Allow default imports from modules with no default export
    "strict": true, // Enable all strict type-checking options
    "forceConsistentCasingInFileNames": true, // Ensure that casing is consistent across the file names
    "module": "ESNext", // Specify module code generation: 'None', 'CommonJS', 'AMD', 'System', 'UMD', 'ES6', 'ES2015', or 'ESNext'
    "moduleResolution": "Node", // Specify module resolution strategy: 'node' for Node.js or 'classic' for the old TypeScript behavior
    "resolveJsonModule": true, // Include modules imported with .json extension
    "isolatedModules": true, // Ensure that each file can be safely transpiled without relying on other imports
    "noEmit": true, // Do not emit output files
    "jsx": "react-jsx", // Specify JSX code generation: 'preserve', 'react-native', 'react', or 'react-jsx' (new JSX transform in React 17+)
    "baseUrl": ".", // Base directory to resolve non-relative module names
    "paths": {
      "@/*": ["src/*"] // Path mapping for module names
    }
  },
  "include": [
    "src",
    "src/types/contexts.types.ts" // Include all files in the 'src' directory for the compilation
  ],
  "references": [{ "path": "./tsconfig.node.json" }] // Reference another tsconfig file for additional configurations or separate projects
}
